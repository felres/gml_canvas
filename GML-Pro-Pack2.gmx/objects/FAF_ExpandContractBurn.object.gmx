<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite=s_fuse;
xin=8; // Gradual Rise
xout=53; // Reversed Gradual Rise (Gradual Fall)
in=0.2;
out=0.8;
expired=0.0;
sub=0;
dsub=0;
alpha=0.0;
mina=1.0/255.0;
tint=c_white;
burnDelay=0.0;
burnSize=16;
dx=0.0;
dy=0.0;
scale=1.0;
size=0.0;
blend=bm_normal;
angle=0.0;
color=c_white;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>expired+=1/room_speed;
if ( expired &gt;= duration ) {
 instance_destroy();
} else {
 sub+=dsub;
 angle+=spin;
 x+=dx;
 y+=dy;
 if ( expired &lt; in ) {
  instant=expired/in;
  if ( xin &gt; 0 ) instant=tween(xin,instant);
  alpha=URANGE(mina,instant,1.0);
 } else if ( expired &gt;= out ) {
  instant=(expired-out)/(duration-out);
  if ( xout ) instant=tween(xout,instant);
  alpha=URANGE(mina,instant,1.0);
  if ( burnDelay &lt; 0.0 ) {
   burnDelay=0.1;
   d=number_range( 0.1, 0.5 );
//      tweens.find("Humanized Gradual Rise"),
//      tweens.find("Humanized Regulated Diminishing Sine"),
   new_duration=number_range(0.1,0.75);
   g=emit_legacypuff(x,y,0.0,0.0,
    s_fireballs,s_any(s_fireballs),bm_add,color_any(),8,27,
    new_duration,new_duration/4.0,new_duration-new_duration/3.0
   );
   g.scale=0.1;
  } else burnDelay-=1/room_speed;
 } else alpha=1.0;
 size=alpha;
}
if ( blend == bm_add ) color=ScaleByAlpha(tint,alpha);
else color=tint;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_blend_mode(blend);
draw_sprite_ext(sprite,sub,x,y,scale*size,scale*size,angle,color,alpha);
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
